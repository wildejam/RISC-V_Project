/**
 * Codasip s.r.o.
 *
 * CONFIDENTIAL
 *
 * Copyright 2019 Codasip s.r.o.
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of
 * Codasip s.r.o. and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip s.r.o. and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 *
 *  \file
 *  \author Codasip
 *  \date   15.04.2019
 *  \brief  debugger configuration
 */

#ifndef DEBUG_HCODAL_HG
#define DEBUG_HCODAL_HG

// Activate all info printing in debugger like this:
// In Debug -> Debug Configurations... -> Codasip C/C++ Application -> Debugger
//          -> Debugger parameters: "--logging 0+"
enum info_levels
{
    INFO_GENERAL    = 2,
    INFO_RF_WRITE   = 3,
    INFO_PC_WRITE   = 4,
    INFO_INTERFACE  = 5,
    INFO_PIPE       = 6,
    INFO_ALU        = 7,
    INFO_ADDR       = 8,
    INFO_MEMDAT     = 9,
    INFO_BR         = 11,
    ALU_ERROR       = 12,
    SRC2_ERROR      = 13,
    INFO_LEVEL      = 22,
    TRACE_LEVEL     = 23,
    WARNING_LEVEL   = 24,
    DEBUG_LEVEL     = 25,
    IMM_ERROR       = 26,
    RFWT_ERROR      = 27,
    FATAL_ERROR_LEVEL = 128
};

#define DEBUG_WRAPPING 32 // maximal number of characters per line in debug messages

#endif // DEBUG_HCODAL
